import EventEmitter from"../events/EventUtils";class PdfState extends EventEmitter{constructor(){super(),this._scale=1,this._isLoading=!0,this._currentPage=1,this._containerId="",this._isAnnotationEnabled=!1,this._isAnnotationConfigurationPropertiesEnabled=!1}static getInstance(t){var n;if(t)return this.pdfStates.has(t)?this.pdfStates.get(t):(n=new PdfState,this.pdfStates.set(t,n),n);throw new Error("Invalid ID: ID cannot be null or empty.")}static removeInstance(t){this.pdfStates.has(t)?this.pdfStates.delete(t):console.warn(`PDF State with ID "${t}" does not exist.`)}static listInstances(){return Array.from(this.pdfStates.keys())}get scale(){return this._scale}set scale(t){this._scale!==t&&(this._scale=t)}get isAnnotationEnabled(){return this._isAnnotationEnabled}set isAnnotationEnabled(t){this._isAnnotationEnabled!==t&&(this._isAnnotationEnabled=t)}get isAnnotationConfigurationPropertiesEnabled(){return this._isAnnotationConfigurationPropertiesEnabled}set isAnnotationConfigurationPropertiesEnabled(t){this._isAnnotationConfigurationPropertiesEnabled!==t&&(this._isAnnotationConfigurationPropertiesEnabled=t)}get pdfInstance(){return this._pdfInstance}set pdfInstance(t){this._pdfInstance!==t&&(this._pdfInstance=t)}get isLoading(){return this._isLoading}set isLoading(t){this._isLoading!==t&&(this._isLoading=t)}get currentPage(){return this._currentPage}set currentPage(t){this._currentPage!==t&&(this._currentPage=t)}get containerId(){return this._containerId}set containerId(t){this._containerId!==t&&(this._containerId=t)}get uiLoading(){return this._uiLoading}set uiLoading(t){this._uiLoading!==t&&(this._uiLoading=t)}destroy(){PdfState.removeInstance(this.containerId)}}PdfState.pdfStates=new Map;export default PdfState;