.a-annotation-layer {
  --csstools-color-scheme--light: initial;
  color-scheme: only light;

  --annotation-unfocused-field-background: url("data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>");
  --input-focus-border-color: Highlight;
  --input-focus-outline: 1px solid Canvas;
  --input-unfocused-border-color: transparent;
  --input-disabled-border-color: transparent;
  --input-hover-border-color: black;
  --link-outline: none;
}

@media screen and (forced-colors: active) {

  .a-annotation-layer {
    --input-focus-border-color: CanvasText;
    --input-unfocused-border-color: ActiveText;
    --input-disabled-border-color: GrayText;
    --input-hover-border-color: Highlight;
    --link-outline: 1.5px solid LinkText;
  }

  .a-annotation-layer .textWidgetAnnotation :is(input, textarea):required,
  .a-annotation-layer .choiceWidgetAnnotation select:required,
  .a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input:required {
    outline: 1.5px solid selectedItem;
  }

  .a-annotation-layer .linkAnnotation {
    outline: var(--link-outline);
  }

  :is(.a-annotation-layer .linkAnnotation):hover {
    -webkit-backdrop-filter: var(--hcm-highlight-filter);
    backdrop-filter: var(--hcm-highlight-filter);
  }

  :is(.a-annotation-layer .linkAnnotation)>a:hover {
    opacity: 0 !important;
    background: none !important;
    box-shadow: none;
  }

  .a-annotation-layer .popupAnnotation .popup {
    outline: calc(1.5px * var(--total-scale-factor)) solid CanvasText !important;
    background-color: ButtonFace !important;
    color: ButtonText !important;
  }

  .a-annotation-layer .highlightArea:hover::after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -webkit-backdrop-filter: var(--hcm-highlight-filter);
    backdrop-filter: var(--hcm-highlight-filter);
    content: "";
    pointer-events: none;
  }

  .a-annotation-layer .popupAnnotation.focused .popup {
    outline: calc(3px * var(--total-scale-factor)) solid Highlight !important;
  }
}

.a-annotation-layer {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  transform-origin: 0 0;
}

.a-annotation-layer[data-main-rotation="90"] .norotate {
  transform: rotate(270deg) translateX(-100%);
}

.a-annotation-layer[data-main-rotation="180"] .norotate {
  transform: rotate(180deg) translate(-100%, -100%);
}

.a-annotation-layer[data-main-rotation="270"] .norotate {
  transform: rotate(90deg) translateY(-100%);
}

.a-annotation-layer.disabled section,
.a-annotation-layer.disabled .popup {
  pointer-events: none;
}

.a-annotation-layer .annotationContent {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.freetext:is(.a-annotation-layer .annotationContent) {
  background: transparent;
  border: none;
  inset: 0;
  overflow: visible;
  white-space: nowrap;
  font: 10px sans-serif;
  line-height: 1.35;
}

.a-annotation-layer section {
  position: absolute;
  text-align: initial;
  pointer-events: auto;
  box-sizing: border-box;
  transform-origin: 0 0;
}

:is(.a-annotation-layer section):has(div.annotationContent) canvas.annotationContent {
  display: none;
}

.textLayer.selecting~.a-annotation-layer section {
  pointer-events: none;
}

.a-annotation-layer :is(.linkAnnotation, .buttonWidgetAnnotation.pushButton)>a {
  position: absolute;
  font-size: 1em;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.a-annotation-layer :is(.linkAnnotation, .buttonWidgetAnnotation.pushButton):not(.hasBorder)>a:hover {
  opacity: 0.2;
  background-color: rgb(255 255 0);
  box-shadow: 0 2px 10px rgb(255 255 0);
}

.a-annotation-layer .linkAnnotation.hasBorder:hover {
  background-color: rgb(255 255 0 / 0.2);
}

.a-annotation-layer .hasBorder {
  background-size: 100% 100%;
}

.a-annotation-layer .textAnnotation img {
  position: absolute;
  cursor: pointer;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.a-annotation-layer .textWidgetAnnotation :is(input, textarea),
.a-annotation-layer .choiceWidgetAnnotation select,
.a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input {
  background-image: var(--annotation-unfocused-field-background);
  border: 2px solid var(--input-unfocused-border-color);
  box-sizing: border-box;
  font: calc(9px * var(--total-scale-factor)) sans-serif;
  height: 100%;
  margin: 0;
  vertical-align: top;
  width: 100%;
}

.a-annotation-layer .textWidgetAnnotation :is(input, textarea):required,
.a-annotation-layer .choiceWidgetAnnotation select:required,
.a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input:required {
  outline: 1.5px solid red;
}

.a-annotation-layer .choiceWidgetAnnotation select option {
  padding: 0;
}

.a-annotation-layer .buttonWidgetAnnotation.radioButton input {
  border-radius: 50%;
}

.a-annotation-layer .textWidgetAnnotation textarea {
  resize: none;
}

.a-annotation-layer .textWidgetAnnotation [disabled]:is(input, textarea),
.a-annotation-layer .choiceWidgetAnnotation select[disabled],
.a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input[disabled] {
  background: none;
  border: 2px solid var(--input-disabled-border-color);
  cursor: not-allowed;
}

.a-annotation-layer .textWidgetAnnotation :is(input, textarea):hover,
.a-annotation-layer .choiceWidgetAnnotation select:hover,
.a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input:hover {
  border: 2px solid var(--input-hover-border-color);
}

.a-annotation-layer .textWidgetAnnotation :is(input, textarea):hover,
.a-annotation-layer .choiceWidgetAnnotation select:hover,
.a-annotation-layer .buttonWidgetAnnotation.checkBox input:hover {
  border-radius: 2px;
}

.a-annotation-layer .textWidgetAnnotation :is(input, textarea):focus,
.a-annotation-layer .choiceWidgetAnnotation select:focus {
  background: none;
  border: 2px solid var(--input-focus-border-color);
  border-radius: 2px;
  outline: var(--input-focus-outline);
}

.a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) :focus {
  background-image: none;
  background-color: transparent;
}

.a-annotation-layer .buttonWidgetAnnotation.checkBox :focus {
  border: 2px solid var(--input-focus-border-color);
  border-radius: 2px;
  outline: var(--input-focus-outline);
}

.a-annotation-layer .buttonWidgetAnnotation.radioButton :focus {
  border: 2px solid var(--input-focus-border-color);
  outline: var(--input-focus-outline);
}

.a-annotation-layer .buttonWidgetAnnotation.checkBox input:checked::before,
.a-annotation-layer .buttonWidgetAnnotation.checkBox input:checked::after,
.a-annotation-layer .buttonWidgetAnnotation.radioButton input:checked::before {
  background-color: CanvasText;
  content: "";
  display: block;
  position: absolute;
}

.a-annotation-layer .buttonWidgetAnnotation.checkBox input:checked::before,
.a-annotation-layer .buttonWidgetAnnotation.checkBox input:checked::after {
  height: 80%;
  left: 45%;
  width: 1px;
}

.a-annotation-layer .buttonWidgetAnnotation.checkBox input:checked::before {
  transform: rotate(45deg);
}

.a-annotation-layer .buttonWidgetAnnotation.checkBox input:checked::after {
  transform: rotate(-45deg);
}

.a-annotation-layer .buttonWidgetAnnotation.radioButton input:checked::before {
  border-radius: 50%;
  height: 50%;
  left: 25%;
  top: 25%;
  width: 50%;
}

.a-annotation-layer .textWidgetAnnotation input.comb {
  font-family: monospace;
  padding-left: 2px;
  padding-right: 0;
}

.a-annotation-layer .textWidgetAnnotation input.comb:focus {
  width: 103%;
}

.a-annotation-layer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.a-annotation-layer .fileAttachmentAnnotation .popupTriggerArea {
  height: 100%;
  width: 100%;
}

.a-annotation-layer .popupAnnotation {
  position: absolute;
  font-size: calc(9px * var(--total-scale-factor));
  pointer-events: none;
  width: -moz-max-content;
  width: max-content;
  max-width: 45%;
  height: auto;
}

.a-annotation-layer .popup {
  background-color: rgb(255 255 153);
  color: black;
  box-shadow: 0 calc(2px * var(--total-scale-factor)) calc(5px * var(--total-scale-factor)) rgb(136 136 136);
  border-radius: calc(2px * var(--total-scale-factor));
  outline: 1.5px solid rgb(255 255 74);
  padding: calc(6px * var(--total-scale-factor));
  cursor: pointer;
  font: message-box;
  white-space: normal;
  word-wrap: break-word;
  pointer-events: auto;
  -webkit-user-select: text;
  -moz-user-select: text;
  user-select: text;
}

.a-annotation-layer .popupAnnotation.focused .popup {
  outline-width: 3px;
}

.a-annotation-layer .popup * {
  font-size: calc(9px * var(--total-scale-factor));
}

.a-annotation-layer .popup>.header {
  display: inline-block;
}

.a-annotation-layer .popup>.header h1 {
  display: inline;
}

.a-annotation-layer .popup>.header .popupDate {
  display: inline-block;
  margin-left: calc(5px * var(--total-scale-factor));
  width: -moz-fit-content;
  width: fit-content;
}

.a-annotation-layer .popupContent {
  border-top: 1px solid rgb(51 51 51);
  margin-top: calc(2px * var(--total-scale-factor));
  padding-top: calc(2px * var(--total-scale-factor));
}

.a-annotation-layer .richText>* {
  white-space: pre-wrap;
  font-size: calc(9px * var(--total-scale-factor));
}

.a-annotation-layer .popupTriggerArea {
  cursor: pointer;
}

.a-annotation-layer section svg {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.a-annotation-layer .annotationTextContent {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  color: transparent;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  pointer-events: none;
}

:is(.a-annotation-layer .annotationTextContent) span {
  width: 100%;
  display: inline-block;
}

.a-annotation-layer svg.quadrilateralsContainer {
  contain: strict;
  width: 0;
  height: 0;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}